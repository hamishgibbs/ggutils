len = length(unique(newCasesBySpecimenDateRollingRate))) %>%
filter(areaCode %in% msoa_int$msoa11cd) %>%
rename(msoa11cd = areaCode) %>%
left_join(msoa_int) %>%
left_join(p_data_kent %>% filter(within == 'Between-tile'), by = c('quadkey' = 'start_quadkey'))
cases %>%
filter(date > as.Date(Sys.time()) - 7) %>%
group_by(areaCode) %>%
summarise(cases = median(newCasesBySpecimenDateRollingRate, na.rm = T),
len = length(unique(newCasesBySpecimenDateRollingRate))) %>%
filter(areaCode %in% msoa_int$msoa11cd) %>%
rename(msoa11cd = areaCode) %>%
left_join(msoa_int) %>%
left_join(p_data_kent %>% filter(within == 'Within-tile'), by = c('quadkey' = 'start_quadkey')) %>%
ggplot() +
geom_point(aes(x = cases, y = n_crisis))
cases %>%
filter(date > as.Date(Sys.time()) - 7) %>%
filter(areaCode %in% msoa_int$msoa11cd) %>%
rename(msoa11cd = areaCode) %>%
left_join(msoa_int)
cases %>%
filter(date > as.Date(Sys.time()) - 7) %>%
filter(areaCode %in% msoa_int$msoa11cd) %>%
rename(msoa11cd = areaCode) %>%
left_join(msoa_int) %>% view
cases %>%
filter(date > as.Date(Sys.time()) - 7) %>%
filter(areaCode %in% msoa_int$msoa11cd) %>%
rename(msoa11cd = areaCode) %>%
left_join(msoa_int) %>% view
cases %>%
filter(date > as.Date(Sys.time()) - 7) %>%
filter(areaCode %in% msoa_int$msoa11cd) %>%
rename(msoa11cd = areaCode) %>%
left_join(msoa_int) %>%
left_join(p_data_kent %>% filter(within == 'Within-tile'), by = c('quadkey' = 'start_quadkey')) %>%
ggplot() +
geom_point(aes(x = cases, y = n_crisis))
cases %>%
filter(date > as.Date(Sys.time()) - 7) %>%
filter(areaCode %in% msoa_int$msoa11cd) %>%
rename(msoa11cd = areaCode) %>%
left_join(msoa_int) %>%
left_join(p_data_kent %>% filter(within == 'Within-tile'), by = c('quadkey' = 'start_quadkey')) %>%
ggplot() +
geom_point(aes(x = cases, y = n_crisis))
cases %>%
filter(date > as.Date(Sys.time()) - 7) %>%
filter(areaCode %in% msoa_int$msoa11cd) %>%
rename(msoa11cd = areaCode) %>%
left_join(msoa_int) %>%
left_join(p_data_kent %>% filter(within == 'Within-tile'), by = c('quadkey' = 'start_quadkey'))
cases %>%
filter(date > as.Date(Sys.time()) - 7) %>%
filter(areaCode %in% msoa_int$msoa11cd) %>%
rename(msoa11cd = areaCode) %>%
left_join(msoa_int) %>%
left_join(p_data_kent %>% filter(within == 'Within-tile'), by = c('quadkey' = 'start_quadkey')) %>%
ggplot() +
geom_point(aes(x = newCasesBySpecimenDateRollingSum, y = n_crisis))
cases %>%
filter(date > as.Date(Sys.time()) - 7) %>%
filter(areaCode %in% msoa_int$msoa11cd) %>%
rename(msoa11cd = areaCode) %>%
left_join(msoa_int) %>%
left_join(p_data_kent %>% filter(within == 'Within-tile'), by = c('quadkey' = 'start_quadkey')) %>%
ggplot() +
geom_point(aes(x = newCasesBySpecimenDateRollingRate, y = n_crisis))
cases %>%
filter(date > as.Date(Sys.time()) - 7) %>%
filter(areaCode %in% msoa_int$msoa11cd) %>%
rename(msoa11cd = areaCode) %>%
left_join(msoa_int) %>%
left_join(p_data_kent %>% filter(within == 'Within-tile'), by = c('quadkey' = 'start_quadkey')) %>%
ggplot() +
geom_point(aes(x = newCasesBySpecimenDateRollingRate, y = n_crisis)) +
ylab('Total number of movements (2 weeks)') +
xlab('Infection rate (1 week)') +
cases %>%
filter(date > as.Date(Sys.time()) - 7) %>%
filter(areaCode %in% msoa_int$msoa11cd) %>%
rename(msoa11cd = areaCode) %>%
left_join(msoa_int) %>%
left_join(p_data_kent %>% filter(within == 'Within-tile'), by = c('quadkey' = 'start_quadkey')) %>%
ggplot() +
geom_point(aes(x = newCasesBySpecimenDateRollingRate, y = n_crisis)) +
ylab('Total number of movements (2 weeks)') +
xlab('Infection rate (1 week)')
cases %>%
filter(date > as.Date(Sys.time()) - 7) %>%
filter(areaCode %in% msoa_int$msoa11cd) %>%
rename(msoa11cd = areaCode) %>%
left_join(msoa_int) %>%
left_join(p_data_kent %>% filter(within == 'Within-tile'), by = c('quadkey' = 'start_quadkey')) %>%
ggplot() +
geom_point(aes(x = newCasesBySpecimenDateRollingRate, y = n_crisis)) +
ylab('Total number of movements (2 weeks)') +
xlab('Infection rate (1 week)')
cases %>%
filter(date > as.Date(Sys.time()) - 7) %>%
filter(areaCode %in% msoa_int$msoa11cd) %>%
rename(msoa11cd = areaCode) %>%
left_join(msoa_int) %>%
left_join(p_data_kent %>% filter(within == 'Within-tile'), by = c('quadkey' = 'start_quadkey')) %>%
ggplot() +
geom_point(aes(x = newCasesBySpecimenDateRollingRate, y = n_crisis)) +
ylab('Total number of movements (2 weeks)') +
xlab('Infection rate (1 week)') +
theme_classic()
cases %>%
filter(date > as.Date(Sys.time()) - 7) %>%
filter(areaCode %in% msoa_int$msoa11cd) %>%
rename(msoa11cd = areaCode) %>%
left_join(msoa_int) %>%
left_join(p_data_kent %>% filter(within == 'Within-tile'), by = c('quadkey' = 'start_quadkey')) %>%
ggplot() +
geom_point(aes(x = newCasesBySpecimenDateRollingRate, y = n_crisis), size = 0.5) +
ylab('Total number of movements (2 weeks)') +
xlab('Infection rate (1 week)') +
theme_classic()
cases %>%
filter(date > as.Date(Sys.time()) - 7) %>%
filter(areaCode %in% msoa_int$msoa11cd) %>%
rename(msoa11cd = areaCode) %>%
left_join(msoa_int) %>%
left_join(p_data_kent %>% filter(within == 'Within-tile'), by = c('quadkey' = 'start_quadkey')) %>%
ggplot() +
geom_point(aes(x = newCasesBySpecimenDateRollingRate, y = n_crisis), size = 0.6) +
ylab('Total number of movements (2 weeks)') +
xlab('Infection rate (1 week)') +
theme_classic()
cases %>%
filter(date > as.Date(Sys.time()) - 7) %>%
filter(areaCode %in% msoa_int$msoa11cd) %>%
rename(msoa11cd = areaCode) %>%
left_join(msoa_int) %>%
left_join(p_data_kent %>% filter(within == 'Within-tile'), by = c('quadkey' = 'start_quadkey')) %>%
ggplot() +
geom_point(aes(x = newCasesBySpecimenDateRollingRate, y = n_crisis), size = 0.7) +
ylab('Total number of movements (2 weeks)') +
xlab('Infection rate (1 week)') +
theme_classic()
cases
cases %>%
filter(date > as.Date(Sys.time()) - 7) %>%
filter(areaCode %in% msoa_int$msoa11cd) %>%
filter(UtlaName == 'Kent') %>%
rename(msoa11cd = areaCode) %>%
left_join(msoa_int) %>%
left_join(p_data_kent %>% filter(within == 'Within-tile'), by = c('quadkey' = 'start_quadkey')) %>%
ggplot() +
geom_point(aes(x = newCasesBySpecimenDateRollingRate, y = n_crisis), size = 0.7) +
ylab('Total number of movements (2 weeks)') +
xlab('Infection rate (1 week)') +
theme_classic()
cases %>%
filter(date > as.Date(Sys.time()) - 7) %>%
filter(areaCode %in% msoa_int$msoa11cd) %>%
filter(UtlaName == 'Kent') %>%
rename(msoa11cd = areaCode) %>%
left_join(msoa_int) %>%
left_join(p_data_kent %>% filter(within == 'Within-tile'), by = c('quadkey' = 'start_quadkey')) %>%
group_by(quadkey) %>%
summarise(newCasesBySpecimenDateRollingRate = median(newCasesBySpecimenDateRollingRate, na.rm = T)) %>%
ggplot() +
geom_point(aes(x = newCasesBySpecimenDateRollingRate, y = n_crisis), size = 0.7) +
ylab('Total number of movements (2 weeks)') +
xlab('Infection rate (1 week)') +
theme_classic()
cases %>%
filter(date > as.Date(Sys.time()) - 7) %>%
filter(areaCode %in% msoa_int$msoa11cd) %>%
filter(UtlaName == 'Kent') %>%
rename(msoa11cd = areaCode) %>%
left_join(msoa_int) %>%
left_join(p_data_kent %>% filter(within == 'Within-tile'), by = c('quadkey' = 'start_quadkey')) %>%
group_by(quadkey) %>%
summarise(newCasesBySpecimenDateRollingRate = median(newCasesBySpecimenDateRollingRate, na.rm = T),
n_crisis = unique(n_crisis)) %>%
ggplot() +
geom_point(aes(x = newCasesBySpecimenDateRollingRate, y = n_crisis), size = 0.7) +
ylab('Total number of movements (2 weeks)') +
xlab('Infection rate (1 week)') +
theme_classic()
cases %>%
filter(date > as.Date(Sys.time()) - 7) %>%
filter(areaCode %in% msoa_int$msoa11cd) %>%
filter(UtlaName == 'Kent') %>%
rename(msoa11cd = areaCode) %>%
left_join(msoa_int) %>%
left_join(p_data_kent %>% filter(within == 'Within-tile'), by = c('quadkey' = 'start_quadkey')) %>%
group_by(quadkey) %>%
summarise(newCasesBySpecimenDateRollingRate = median(newCasesBySpecimenDateRollingRate, na.rm = T),
n_crisis = unique(n_crisis))
cases %>%
filter(date > as.Date(Sys.time()) - 7) %>%
filter(areaCode %in% msoa_int$msoa11cd) %>%
filter(UtlaName == 'Kent') %>%
rename(msoa11cd = areaCode) %>%
left_join(msoa_int) %>%
left_join(p_data_kent %>% filter(within == 'Within-tile'), by = c('quadkey' = 'start_quadkey')) %>%
group_by(quadkey) %>%
summarise(newCasesBySpecimenDateRollingRate = median(newCasesBySpecimenDateRollingRate, na.rm = T),
n_crisis = unique(n_crisis)) %>%
ggplot() +
geom_point(aes(x = newCasesBySpecimenDateRollingRate, y = n_crisis), size = 0.7) +
ylab('Total number of movements (2 weeks)') +
xlab('Infection rate (1 week)') +
theme_classic()
p_cases <- cases %>%
filter(date > as.Date(Sys.time()) - 7) %>%
filter(areaCode %in% msoa_int$msoa11cd) %>%
filter(UtlaName == 'Kent') %>%
rename(msoa11cd = areaCode) %>%
left_join(msoa_int) %>%
left_join(p_data_kent %>% filter(within == 'Within-tile'), by = c('quadkey' = 'start_quadkey')) %>%
group_by(quadkey) %>%
summarise(newCasesBySpecimenDateRollingRate = median(newCasesBySpecimenDateRollingRate, na.rm = T),
n_crisis = unique(n_crisis)) %>%
ggplot() +
geom_point(aes(x = newCasesBySpecimenDateRollingRate, y = n_crisis), size = 0.7) +
ylab('Total number of movements (2 weeks)') +
xlab('Infection rate (1 week)') +
theme_classic()
ggutils::ggsave_png_pdf(p_cases,
'/Users/hamishgibbs/Documents/Covid-19/kent_mobility/output/p_cases.png',
5, 4)
p_cases <- cases %>%
filter(date > as.Date(Sys.time()) - 7) %>%
filter(areaCode %in% msoa_int$msoa11cd) %>%
filter(UtlaName == 'Kent') %>%
rename(msoa11cd = areaCode) %>%
left_join(msoa_int) %>%
left_join(p_data_kent %>% filter(within == 'Between-tile'), by = c('quadkey' = 'start_quadkey')) %>%
group_by(quadkey) %>%
summarise(newCasesBySpecimenDateRollingRate = median(newCasesBySpecimenDateRollingRate, na.rm = T),
n_crisis = unique(n_crisis)) %>%
ggplot() +
geom_point(aes(x = newCasesBySpecimenDateRollingRate, y = n_crisis), size = 0.7) +
ylab('Total number of movements (2 weeks)') +
xlab('Infection rate (1 week)') +
theme_classic()
ggutils::ggsave_png_pdf(p_cases,
'/Users/hamishgibbs/Documents/Covid-19/kent_mobility/output/p_cases.png',
5, 4)
p_cases
p_cases <- cases %>%
filter(date > as.Date(Sys.time()) - 14) %>%
filter(areaCode %in% msoa_int$msoa11cd) %>%
filter(UtlaName == 'Kent') %>%
rename(msoa11cd = areaCode) %>%
left_join(msoa_int) %>%
left_join(p_data_kent %>% filter(within == 'Between-tile'), by = c('quadkey' = 'start_quadkey')) %>%
group_by(quadkey) %>%
summarise(newCasesBySpecimenDateRollingRate = median(newCasesBySpecimenDateRollingRate, na.rm = T),
n_crisis = unique(n_crisis)) %>%
ggplot() +
geom_point(aes(x = newCasesBySpecimenDateRollingRate, y = n_crisis), size = 0.7) +
ylab('Total number of movements (2 weeks)') +
xlab('Infection rate (1 week)') +
theme_classic()
ggutils::ggsave_png_pdf(p_cases,
'/Users/hamishgibbs/Documents/Covid-19/kent_mobility/output/p_cases.png',
5, 4)
p_cases
ggutils::ggsave_png_pdf(p_dens,
'/Users/hamishgibbs/Documents/Covid-19/kent_mobility/output/p_dens.png')
# Load libraries
suppressPackageStartupMessages({
require(tidyverse)
require(sf)
require(ggutils)
})
# Define args interactively or accept commandArgs
if(interactive()){
.args <-  c("/Users/hamishgibbs/Documents/Covid-19/facebook_mobility_uk/data/processed/movement_daily.csv",
"/Users/hamishgibbs/Documents/Covid-19/uk_mobility_genomics/data/interim/tiles.shp",
"/Users/hamishgibbs/Documents/Covid-19/uk_demographic_mobility/data/raw/msoa_centroids/Middle_Layer_Super_Output_Areas__December_2011__Population_Weighted_Centroids.shp",
"output")
} else {
.args <- commandArgs(trailingOnly = T)
}
cases <- read_csv('https://api.coronavirus.data.gov.uk/v2/data?areaType=msoa&metric=newCasesBySpecimenDateRollingSum&metric=newCasesBySpecimenDateRollingRate&format=csv')
mob <- read_csv(.args[1]) %>%
rename(date = date_time) %>%
mutate(date = lubridate::ymd(date))
tiles <- st_read(.args[2])
msoa_cent <- st_read(.args[3])
n_days = 21
# filter prev 3 weeks
mob <- mob %>%
filter(date > (as.Date(Sys.time()) - n_days))
uk <- rnaturalearth::ne_states('United Kingdom', returnclass = 'sf')
uk %>%
ggplot() +
geom_sf() +
geom_sf(data = . %>% filter(name == 'Kent'), fill = 'red')
kent <- uk %>% filter(name == 'Kent')
kent_qks <- st_intersection(tiles, kent)
kent_qks <- kent_qks$quadkey %>% unique() %>% as.character()
kent_mob <- mob %>%
filter(start_quadkey %in% kent_qks)
non_kent_mob <- mob %>%
filter(!start_quadkey %in% kent_qks)
group_vars = c('within', 'date')
kent_ci <- kent_mob %>%
mutate(within = start_quadkey == end_quadkey) %>%
summarise_ci(group_vars, 'perc_change') %>%
mutate(type = ifelse(within, 'Kent within-tile', 'Kent between-tile')) %>%
mutate(loc = 'Kent')
non_kent_ci <- non_kent_mob %>%
mutate(within = start_quadkey == end_quadkey) %>%
summarise_ci(group_vars, 'perc_change') %>%
mutate(type = ifelse(within, 'Outside Kent\nwithin-tile', 'Outside Kent\nbetween-tile')) %>%
mutate(loc = 'Outside Kent')
p_dens <- rbind(kent_ci, non_kent_ci) %>%
ggplot() +
geom_ribbon(aes(x = date, ymin = ci_10, ymax = ci_90, group = within, fill = type), alpha = 0.2) +
geom_ribbon(aes(x = date, ymin = ci_40, ymax = ci_60, group = within, fill = type), alpha = 0.2) +
geom_ribbon(aes(x = date, ymin = ci_25, ymax = ci_75, group = within, fill = type), alpha = 0.2) +
scale_fill_manual(values = c('red', 'darkgrey', 'blue', 'darkgrey')) +
geom_hline(yintercept = 0, linetype = 'dashed', color = 'black', size = 0.2) +
facet_wrap(~loc) +
theme_classic() +
theme(legend.title = element_blank(),
axis.title.x = element_blank())
ggutils::ggsave_png_pdf(p_dens,
'/Users/hamishgibbs/Documents/Covid-19/kent_mobility/output/p_dens.png')
p_data <- mob %>%
mutate(within = start_quadkey == end_quadkey,
within = ifelse(within, 'Within-tile', 'Between-tile')) %>%
filter(date > as.Date(Sys.time()) - 16) %>%
group_by(start_quadkey, within) %>%
summarise(perc_change = median(perc_change),
n_crisis = sum(n_crisis)) %>%
ungroup() %>%
arrange(-perc_change) %>%
mutate(qk = row_number())
p_data_kent <- p_data %>%
filter(start_quadkey %in% kent_qks)
quant <- rbind(tibble(quantile = quantile(p_data %>% filter(within == 'Within-tile') %>% pull(perc_change), probs = seq(0, 1, 0.2)),
within = 'Within-tile'),
tibble(quantile = quantile(p_data %>% filter(within == 'Between-tile') %>% pull(perc_change), probs = seq(0, 1, 0.2)),
within = 'Between-tile'))
p_rank <- p_data %>%
ggplot() +
geom_path(aes(x = qk, y = perc_change), size = 0.1) +
geom_point(aes(x = qk, y = perc_change), color = 'black', size = 0.3) +
geom_point(data = p_data_kent, aes(x = qk, y = perc_change), color = 'red') +
geom_hline(data = quant, aes(yintercept = quantile), linetype = 'dashed', size = 0.2, color = 'black') +
geom_hline(yintercept = 0, size = 0.3, color = 'blue') +
facet_wrap(~within) +
theme_classic() +
ylab('Median percent deviation from baesline (2 weeks)') +
xlab('Ranked tiles')
ggutils::ggsave_png_pdf(p_rank,
'/Users/hamishgibbs/Documents/Covid-19/kent_mobility/output/p_rank.png')
kent_tiles <- tiles %>%
filter(quadkey %in% kent_qks)
kent_map <- kent_tiles %>%
left_join(p_data_kent, by = c('quadkey' = 'start_quadkey')) %>%
drop_na(perc_change) %>%
ggplot() +
geom_sf(data = uk, fill = 'transparent', size = 0.1, color = 'black') +
geom_sf(aes(fill = perc_change), size = 0.1, color = 'black') +
colorspace::scale_fill_continuous_sequential('Reds', rev = F) +
facet_wrap(~within) +
theme_void() +
geo_lims(kent_tiles) +
labs(fill = 'median\n% change\n(2 weeks)')
ggutils::ggsave_png_pdf(kent_map,
'/Users/hamishgibbs/Documents/Covid-19/kent_mobility/output/kent_map.png',
8, 3)
kent_pop <- kent_tiles %>%
left_join(p_data_kent, by = c('quadkey' = 'start_quadkey')) %>%
drop_na(perc_change) %>%
ggplot() +
geom_sf(data = uk, fill = 'transparent', size = 0.1, color = 'black') +
geom_sf(aes(fill = n_crisis), size = 0.1, color = 'black') +
colorspace::scale_fill_continuous_sequential('blues', rev = F) +
theme_void() +
geo_lims(kent_tiles) +
labs(fill = 'Total movements\n(2 weeks)') +
facet_wrap(~within)
ggutils::ggsave_png_pdf(kent_pop,
'/Users/hamishgibbs/Documents/Covid-19/kent_mobility/output/kent_pop.png',
8, 3)
disp_data <- mob %>%
filter(date > as.Date(Sys.time()) - 16) %>%
filter(start_quadkey %in% kent_qks,
!end_quadkey %in% kent_qks) %>%
group_by(end_quadkey) %>%
summarise(n_crisis = sum(n_crisis, na.rm = T))
p_disp <- tiles %>%
left_join(disp_data, by = c('quadkey' = 'end_quadkey')) %>%
drop_na(n_crisis) %>%
ggplot() +
ggutils::plot_basemap() +
geom_sf(data = uk, size = 0.1, color = 'black', fill = 'transparent') +
geom_sf(aes(fill = n_crisis), size = 0) +
geom_sf(data = kent_tiles, size = 0, fill = 'darkgreen') +
theme_void() +
xlim(-5, 2) +
ylim(50, 54) +
labs(fill = 'Total arriving\ntravellers')
ggutils::ggsave_png_pdf(p_disp,
'/Users/hamishgibbs/Documents/Covid-19/kent_mobility/output/p_disp.png',
5, 4)
msoa_int <- st_intersection(kent_tiles %>% st_transform(27700), msoa_cent) %>%
select(quadkey, msoa11cd) %>%
st_drop_geometry() %>%
as_tibble() %>%
mutate(quadkey = as.character(quadkey),
msoa11cd = as.character(msoa11cd))
p_cases <- cases %>%
filter(date > as.Date(Sys.time()) - 16) %>%
filter(areaCode %in% msoa_int$msoa11cd) %>%
filter(UtlaName == 'Kent') %>%
rename(msoa11cd = areaCode) %>%
left_join(msoa_int) %>%
left_join(p_data_kent %>% filter(within == 'Between-tile'), by = c('quadkey' = 'start_quadkey')) %>%
group_by(quadkey) %>%
summarise(newCasesBySpecimenDateRollingRate = median(newCasesBySpecimenDateRollingRate, na.rm = T),
n_crisis = unique(n_crisis)) %>%
ggplot() +
geom_point(aes(x = newCasesBySpecimenDateRollingRate, y = n_crisis), size = 0.7) +
ylab('Total number of movements (2 weeks)') +
xlab('Infection rate (1 week)') +
theme_classic()
ggutils::ggsave_png_pdf(p_cases,
'/Users/hamishgibbs/Documents/Covid-19/kent_mobility/output/p_cases.png',
5, 4)
quant <- rbind(tibble(quantile = quantile(p_data %>% filter(within == 'Within-tile') %>% pull(perc_change), probs = seq(0, 1, 0.5)),
within = 'Within-tile'),
tibble(quantile = quantile(p_data %>% filter(within == 'Between-tile') %>% pull(perc_change), probs = seq(0, 1, 0.5)),
within = 'Between-tile'))
p_rank <- p_data %>%
ggplot() +
geom_path(aes(x = qk, y = perc_change), size = 0.1) +
geom_point(aes(x = qk, y = perc_change), color = 'black', size = 0.3) +
geom_point(data = p_data_kent, aes(x = qk, y = perc_change), color = 'red') +
geom_hline(data = quant, aes(yintercept = quantile), linetype = 'dashed', size = 0.2, color = 'black') +
geom_hline(yintercept = 0, size = 0.3, color = 'blue') +
facet_wrap(~within) +
theme_classic() +
ylab('Median percent deviation from baesline (2 weeks)') +
xlab('Ranked tiles')
p_rank
quant <- rbind(tibble(quantile = quantile(p_data %>% filter(within == 'Within-tile') %>% pull(perc_change), probs = seq(0, 1, 0.05)),
within = 'Within-tile'),
tibble(quantile = quantile(p_data %>% filter(within == 'Between-tile') %>% pull(perc_change), probs = seq(0, 1, 0.05)),
within = 'Between-tile'))
p_rank <- p_data %>%
ggplot() +
geom_path(aes(x = qk, y = perc_change), size = 0.1) +
geom_point(aes(x = qk, y = perc_change), color = 'black', size = 0.3) +
geom_point(data = p_data_kent, aes(x = qk, y = perc_change), color = 'red') +
geom_hline(data = quant, aes(yintercept = quantile), linetype = 'dashed', size = 0.2, color = 'black') +
geom_hline(yintercept = 0, size = 0.3, color = 'blue') +
facet_wrap(~within) +
theme_classic() +
ylab('Median percent deviation from baesline (2 weeks)') +
xlab('Ranked tiles')
p_rank
quant <- rbind(tibble(quantile = quantile(p_data %>% filter(within == 'Within-tile') %>% pull(perc_change), probs = seq(0, 1, 0.01)),
within = 'Within-tile'),
tibble(quantile = quantile(p_data %>% filter(within == 'Between-tile') %>% pull(perc_change), probs = seq(0, 1, 0.01)),
within = 'Between-tile'))
p_rank <- p_data %>%
ggplot() +
geom_path(aes(x = qk, y = perc_change), size = 0.1) +
geom_point(aes(x = qk, y = perc_change), color = 'black', size = 0.3) +
geom_point(data = p_data_kent, aes(x = qk, y = perc_change), color = 'red') +
geom_hline(data = quant, aes(yintercept = quantile), linetype = 'dashed', size = 0.2, color = 'black') +
geom_hline(yintercept = 0, size = 0.3, color = 'blue') +
facet_wrap(~within) +
theme_classic() +
ylab('Median percent deviation from baesline (2 weeks)') +
xlab('Ranked tiles')
p_rank
?ggplot2::scale_fill_continuous
testthat::test_check()
testthat::test_check(".")
breaks <- c(1, 2)
devtools::install()
devtools::install(".")
testthat::test_that('label_interval works as expected', {
breaks <- c(1, 2)
label <- classify_intervals(breaks)
testthat::expect_identical(label,
"(1 to 2]")
})
testthat::test_that('classify_intervals works as expected', {
data <- data.frame(value = c(1, 2, 3))
breaks <- c(1, 2, 3)
res <- classify_intervals(data, "value", breaks)
testthat::expect_identical(levels(res$value),
c("(1 to 2]", "(2 to 3]"))
})
devtools::check()
devtools::check()
devtools::check()
devtools::check()
usethis::use_package("scales")
usethis::use_package("dplyr")
devtools::check()
devtools::check()
devtools::install()
ggutils::classify_intervals()
remove.packages("ggutils")
devtools::install()
